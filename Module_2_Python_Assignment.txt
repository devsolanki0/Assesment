Module 2: Python Assignment - Answer Key

Task 1: Python Fundamentals - Answers

1. Sum of first n positive integers
def sum_n(n):
    return n * (n + 1) // 2

2. Count occurrences of a substring
def count_substring(string, substring):
    return string.count(substring)

3. Count occurrences of each word
def word_count(sentence):
    from collections import Counter
    return Counter(sentence.split())

4. Combine two strings and swap first two characters
def swap_and_combine(a, b):
    return f"{b[:2]+a[2:]} {a[:2]+b[2:]}"

5. Modify string with 'ing' or 'ly'
def modify_string(s):
    if len(s) < 3:
        return s
    if s.endswith('ing'):
        return s + 'ly'
    return s + 'ing'

6. Replace 'not'...'poor' with 'good'
def replace_not_poor(s):
    not_index = s.find('not')
    poor_index = s.find('poor')
    if not_index != -1 and poor_index > not_index:
        return s[:not_index] + 'good' + s[poor_index + 4:]
    return s

7. GCD of two numbers
import math
def gcd(a, b):
    return math.gcd(a, b)

8. Check if a list contains a sublist
def contains_sublist(main, sub):
    for i in range(len(main) - len(sub) + 1):
        if main[i:i+len(sub)] == sub:
            return True
    return False

9. Second smallest number
def second_smallest(lst):
    return sorted(set(lst))[1]

10. Unique values from a list
def unique_values(lst):
    return list(set(lst))

11. Unzip a list of tuples
def unzip_list(tuples):
    return list(zip(*tuples))

12. Convert list of tuples to dictionary
def tuples_to_dict(tuples):
    return dict(tuples)

13. Sort dictionary by value
def sort_dict_by_value(d, reverse=False):
    return dict(sorted(d.items(), key=lambda item: item[1], reverse=reverse))

14. Highest 3 values in a dictionary
def top_3_values(d):
    return sorted(d.values(), reverse=True)[:3]

15. Fibonacci series up to n
def fibonacci(n):
    fib = [0, 1]
    for i in range(2, n):
        fib.append(fib[-1] + fib[-2])
    return fib[:n]

16. Frequency count in a list
def frequency_count(lst):
    from collections import Counter
    return Counter(lst)

17. Sum of odd and even series
import math
def series_sum(n):
    odd_sum = sum((i**2)/math.factorial(i) for i in range(1, n+1, 2))
    even_sum = sum((i**2)/math.factorial(i) for i in range(2, n+1, 2))
    return odd_sum, even_sum

18. Factorial using recursion
def factorial(n):
    if n == 0:
        return 1
    return n * factorial(n - 1)

19. Unique elements from a list
def unique_list(lst):
    return list(set(lst))

20. Mini Project: Password Generator
import random
import string

class User:
    def __init__(self, user_id, name, password):
        self.details = (user_id, name, password)

def generate_password(user_input):
    words = user_input.split()
    if not words:
        raise ValueError("Input cannot be empty")
    chosen = random.choice(words).capitalize()
    chars = string.ascii_letters + string.digits + string.punctuation
    while True:
        password = chosen + ''.join(random.choices(chars, k=8))
        if len(password) > 8:
            return password

# Example usage
# password = generate_password("secure input words here")
# user = User("U01", "Alice", password)

